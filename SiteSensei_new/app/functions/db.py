import cx_Oracle
import os

db_user = os.environ["DB_USER"]
db_password = os.environ["DB_PASS"]

def initialize_db():
    connection = cx_Oracle.connect(user=db_user, password=db_password)
    c = conn.cursor()

        # Create users table
    c.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
            username TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL
        )
    ''')

        # Create libraries table with a file_blob column for Pickle files.
    c.execute('''
        CREATE TABLE IF NOT EXISTS libraries (
            api_key TEXT PRIMARY KEY,
            file_blob BLOB,
            user_id INTEGER NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
        )
    ''')
    conn.commit()
    conn.close()

def store_api_key(api_key, file_path):
    conn = cx_Oracle.connect(user=db_user, password=db_password)
    c = conn.cursor()
    c.execute("INSERT INTO libraries (api_key, file_path) VALUES (?, ?)", (api_key, file_path))
    conn.commit()
    conn.close()


#TODO: Implement validation of user keys.
def get_file_path(api_key):
    """Retrieve the file path associated with the given API key from the database."""
    try:
        conn = cx_Oracle.connect(user=db_user, password=db_password)
        c = conn.cursor()
        c.execute("SELECT file_path FROM libraries WHERE api_key = ?", (api_key,))
        result = c.fetchone()
        return result[0] if result else None
    finally:
        conn.close()